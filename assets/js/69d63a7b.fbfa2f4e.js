"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[291],{4865:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(9703);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(r),f=o,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||a;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7352:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=r(7086),o=(r(9703),r(4865));const a={},i="Terminology",c={unversionedId:"terminology/index",id:"terminology/index",title:"Terminology",description:"OpenCar is a relatively new project/concept. Therefore, we had to create new words to describe all of the different parts that make up the OpenCar system (or operating system).",source:"@site/docs/terminology/index.md",sourceDirName:"terminology",slug:"/terminology/",permalink:"/open-car/docs/terminology/",draft:!1,editUrl:"https://github.com/Reboot-Codes/open-car/tree/main/packages/docs/docs/terminology/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Writing Custom Firmware",permalink:"/open-car/docs/creating-firmware/"},next:{title:"OpenFirmware",permalink:"/open-car/docs/terminology/openfirmware"}},l={},p=[],s={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"terminology"},"Terminology"),(0,o.kt)("p",null,"OpenCar is a relatively new project/concept. Therefore, we had to create new words to describe all of the different parts that make up the OpenCar system (or operating system)."),(0,o.kt)("p",null,"The core components are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"OpenFirmware"),(0,o.kt)("li",{parentName:"ul"},"OpenUI"),(0,o.kt)("li",{parentName:"ul"},"OpenDiagnostics")),(0,o.kt)("p",null,"Each are different concepts entirely. OpenFirmware does actual the controlling of the car's internals. OpenUI provides an in-vehicle user interface. And OpenDiagnostics provides an interface on a separate device (like a phone or tablet) mainly used to diagnose problems."))}u.isMDXComponent=!0}}]);